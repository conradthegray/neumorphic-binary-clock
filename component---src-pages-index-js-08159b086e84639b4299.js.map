{"version":3,"sources":["webpack:///./src/hooks/useInterval.js","webpack:///./src/components/BinaryDigit/index.js","webpack:///./src/components/BinaryDigit/BinaryDigit.js","webpack:///./src/components/BinaryBlock/index.js","webpack:///./src/components/BinaryBlock/BinaryBlock.js","webpack:///./src/components/BinaryClock/BinaryClock.js","webpack:///./src/components/BinaryClock/index.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","BinaryDigit","num","bin","digit","className","Number","toString","Array","length","join","split","map","value","index","key","BinaryBlock","getCurrentTime","now","Date","hour","getHours","minutes","getMinutes","seconds","getSeconds","BinaryClock","useState","setNow","IndexPage","Layout","SEO","title","Container","Header","Footer","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","arguments","that","this","valueOf","call","keys","j","constructor"],"mappings":"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","file":"component---src-pages-index-js-08159b086e84639b4299.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import BinaryDigit from './BinaryDigit';\n\nexport default BinaryDigit;\n","import React from 'react';\n\nimport './BinaryDigit.css';\n\nconst toBinary = num => {\n  const bin = Number(num).toString(2);\n  return new Array(4 - bin.length + 1).join(0) + bin;\n};\n\nconst BinaryDigit = ({ digit }) => (\n  <div className=\"BinaryDigit\">\n    {toBinary(digit)\n      .split('')\n      .map((value, index) => (\n        <div\n          className={`BinaryDigit-digit ${\n            value === '1' ? 'BinaryDigit-digit-on' : 'BinaryDigit-digit-off'\n          }`}\n          key={`binary-digit-${index}`}\n        />\n      ))}\n  </div>\n);\n\nexport default BinaryDigit;\n","import BinaryBlock from './BinaryBlock';\n\nexport default BinaryBlock;\n","import React from 'react';\n\nimport BinaryDigit from '../BinaryDigit';\n\nimport './BinaryBlock.css';\n\nconst pad = num => (num <= 9 ? `0${num}` : num);\n\nconst BinaryBlock = ({ value }) => (\n  <div className=\"BinaryBlock\">\n    {pad(value)\n      .toString()\n      .split('')\n      .map((digit, index) => (\n        <BinaryDigit digit={digit} key={`binary-digit-${index}`} />\n      ))}\n  </div>\n);\n\nexport default BinaryBlock;\n","import React, { useState } from 'react';\nimport useInterval from '../../hooks/useInterval';\nimport BinaryBlock from '../BinaryBlock';\n\nimport './BinaryClock.css';\n\nconst getCurrentTime = () => {\n  const now = new Date();\n\n  return {\n    hour: now.getHours(),\n    minutes: now.getMinutes(),\n    seconds: now.getSeconds(),\n  };\n};\n\nconst BinaryClock = () => {\n  let [now, setNow] = useState(getCurrentTime());\n\n  useInterval(() => {\n    setNow(getCurrentTime());\n  }, 1000);\n\n  return (\n    <div className=\"BinaryClock\">\n      <BinaryBlock value={now.hour} />\n      <BinaryBlock value={now.minutes} />\n      <BinaryBlock value={now.seconds} />\n    </div>\n  );\n};\n\nexport default BinaryClock;\n","import BinaryClock from './BinaryClock';\n\nexport default BinaryClock;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport BinaryClock from '../components/BinaryClock';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Container from '../components/Container';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Neumorphic Binary Clock #Neumorphism\" />\n\n    <Container>\n      <Header />\n      <BinaryClock />\n      <Footer />\n    </Container>\n  </Layout>\n);\n\nexport default IndexPage;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}